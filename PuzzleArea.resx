<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>